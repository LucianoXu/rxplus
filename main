#! /usr/bin/env python3

'''
The main entry for all tasks.
'''

import argparse

if __name__ == '__main__':
    parser = argparse.ArgumentParser(description="Main entry for multiple functions.")

    subparsers = parser.add_subparsers(dest="command", required=True)

    from tasks import task_wsserver
    task_wsserver.build_parser(subparsers)
    # ./main wsserver

    from tasks import task_wsclient
    task_wsclient.build_parser(subparsers)
    # ./main wsclient

    from tasks import task_wsclient_group
    task_wsclient_group.build_parser(subparsers)
    # ./main wsclient_group --path=/test

    from tasks import task_cli
    task_cli.build_parser(subparsers)
    # ./main cli --mode=loop

    from tasks import task_mic_server
    task_mic_server.build_parser(subparsers)
    # ./main mic_server --format=Float32 --sr=48000 --ch=1

    from tasks import task_speaker_client
    task_speaker_client.build_parser(subparsers)
    # ./main speaker_client --format=Float32 --sr=48000 --ch=1

    from tasks import task_wavfile_server
    task_wavfile_server.build_parser(subparsers)
    # ./main wavfile_server --path=resources/ranko.wav --format=Float32 --sr=48000 --ch=1
    
    from tasks import task_wavfile_client
    task_wavfile_client.build_parser(subparsers)
    # ./main wavfile_client --path=resources/output.wav --format=Float32 --sr=48000 --ch=1

    from tasks import task_screen_capture_server
    task_screen_capture_server.build_parser(subparsers)
    # ./main screen_capture_server --fps=10.0

    from tasks import task_jpeg_client
    task_jpeg_client.build_parser(subparsers)
    # ./main jpeg_client

    from tasks import task_np_matrix_server
    task_np_matrix_server.build_parser(subparsers)
    # ./main np_matrix_server --rows=4 --cols=4 --dtype=float32 --fps=2.0

    from tasks import task_np_matrix_client
    task_np_matrix_client.build_parser(subparsers)
    # ./main np_matrix_client --rows=4 --cols=4 --dtype=float32 --tx_fps=1.0

    # Parse arguments
    args = parser.parse_args()
    
    # Call the function associated with the chosen command
    args.func(args)
